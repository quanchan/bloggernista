[{"/home/quantran/Documents/MERN_task/bloggernista/src/client/js/reportWebVitals.js":"1","/home/quantran/Documents/MERN_task/bloggernista/src/index.js":"2","/home/quantran/Documents/MERN_task/bloggernista/src/client/js/Components/AuthenticationForm.js":"3","/home/quantran/Documents/MERN_task/bloggernista/src/client/js/Components/App.js":"4","/home/quantran/Documents/MERN_task/bloggernista/src/client/js/Components/Header.js":"5"},{"size":362,"mtime":1607958092650,"results":"6","hashOfConfig":"7"},{"size":670,"mtime":1608089214988,"results":"8","hashOfConfig":"7"},{"size":3084,"mtime":1608087791386,"results":"9","hashOfConfig":"7"},{"size":574,"mtime":1608090371380,"results":"10","hashOfConfig":"7"},{"size":92,"mtime":1608090508198,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tnpuay",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/quantran/Documents/MERN_task/bloggernista/src/client/js/reportWebVitals.js",[],"/home/quantran/Documents/MERN_task/bloggernista/src/index.js",[],"/home/quantran/Documents/MERN_task/bloggernista/src/client/js/Components/AuthenticationForm.js",["23","24"],"import { useState, Fragment } from \"react\"\nimport '../../style/AuthenticationForm.scss'\nconst axios = require('axios')\nfunction LoginForm() {\n    const handleLogin = async (e) => {\n        e.preventDefault()\n        const username = document.getElementById('username').value\n        const password = document.getElementById('password').value\n\n        axios.post(\n            'http://localhost:8082/api/user/login', \n            {username, password}\n        )\n        .then(userData => userData.data.token)\n        .then(token => window.localStorage.setItem(\"token\", token))\n        .then(axios.get(\n            'http://localhost:8082/api/posts',\n            \n        ))\n        .catch(err => console.log(err))\n        \n    }\n    return(\n        <form>\n            <input id=\"username\" type=\"text\" className=\"auth-input\" placeholder=\"Enter your username\"></input>\n            <input id=\"password\" type=\"password\" className=\"auth-input\" placeholder=\"Enter your password\"></input>\n            <input id=\"login-submit\" type=\"submit\" onClick={handleLogin} className=\"auth-submit\" value=\"Submit\"></input>\n            <ErrorMessage/>\n        </form>\n    )\n}\n\nfunction SignUpForm() {\n    const handleSignUp = async (e) => {\n        e.preventDefault()\n        const username = document.getElementById('username').value\n        const password = document.getElementById('password').value\n        const confirmPassword = document.getElementById('confirm-password').value\n        const error = document.querySelector(\".error-message\")\n        if (password !== confirmPassword) {\n            error.innerHTML = \"Your passwords do not match\"\n        }\n        axios.post(\n            'http://localhost:8082/api/user/login', \n            {username, password}\n        )\n        .then(userData => console.log(userData))\n        .catch(err => console.err(err))\n    }\n    return(\n        <form>\n            <input id=\"username\" type=\"text\" className=\"auth-input\" placeholder=\"Enter your username\"></input>\n            <input id=\"password\" type=\"password\" className=\"auth-input\" placeholder=\"Enter your password\"></input>\n            <input id=\"confirm-password\" type=\"password\" className=\"auth-input\" placeholder=\"Re-enter your password\"></input>\n            <input id=\"signup-submit\" type=\"submit\" className=\"auth-submit\" value=\"Submit\" onClick={handleSignUp}></input>\n            <ErrorMessage/>\n        </form>\n        \n    )\n}\n\nfunction ErrorMessage() {\n    return (\n        <div className=\"error-message\">\n\n        </div>\n    )\n}\n\nfunction AuthenticationForm() {\n    const [isLoginScreen, setIsLoginScreen] = useState(true)\n    if(isLoginScreen) {\n        return( \n        <>\n            <LoginForm />\n            <a onClick={() => setIsLoginScreen(!isLoginScreen)}>\n                Haven't got an account? Sign up!\n            </a>\n        </>\n        )\n    } \n    return (\n        <>\n            <SignUpForm />\n            <a onClick={() => setIsLoginScreen(!isLoginScreen)}>\n               Already got an account? Login!\n            </a>\n        </>\n        )\n}\n\n\nexport default AuthenticationForm","/home/quantran/Documents/MERN_task/bloggernista/src/client/js/Components/App.js",[],"/home/quantran/Documents/MERN_task/bloggernista/src/client/js/Components/Header.js",[],{"ruleId":"25","severity":1,"message":"26","line":76,"column":13,"nodeType":"27","endLine":76,"endColumn":65},{"ruleId":"25","severity":1,"message":"26","line":85,"column":13,"nodeType":"27","endLine":85,"endColumn":65},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]